---
name: monorepo
on:
  push:
    branches:
      - main
jobs:
  monorepo-job:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    container:
      image: gcr.io/bazel-public/bazel:5.4.0
      volumes:
        - /usr/bin/docker:/usr/bin/docker
        - /var/run/docker.sock:/var/run/docker.sock
      options: -e USER="root" -u="root"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup git config
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GH_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Fetch bazel cache
        uses: actions/cache@v3
        with:
          path: /tmp/cache
          key: bazel-cache
          restore-keys: |
            bazel-cache
      - name: Bazel test
        run: bazel --output_user_root=/tmp/cache test --test_output=errors //...
      - name: Bazel release
        run: |
          rm -rf bazel-bin/hack/packages-to-release
          bazel build //hack:find-what-packages-to-release
          for package in $(cat $(bazel --output_user_root=/tmp/cache cquery --ui_event_filters=-INFO //hack:find-what-packages-to-release --output=files))
          do
            bazel --output_user_root=/tmp/cache run $package":release_me"
            for container in $(bazel --output_user_root=/tmp/cache query --output=label "kind("container_push", $package/...)")
            do 
              bazel --output_user_root=/tmp/cache run --config=release --define=registry=ghcr.io/${{ github.actor }} $container  
            done
          done
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}