load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

sh_test(
    name = "cmd_integration_test",
    srcs = ["test.sh"],
    args = [
        "$(location :cmd)",
        "$(location //shape-app/api/pacts:contract)",
    ],  #keep
    data = [
        ":cmd",
        ":config",  #keep
        "//pact-helper:pact-plugins",
        "//shape-app/api/pacts:contract",
        "@pact_reference//:pact_verifier_cli",
    ],
    env = {
        "CONFIG": "$(location :config)",
        "PACT_PLUGIN_DIR": "$(rlocationpath //pact-helper:pact-plugins)",
    },
    tags = [
        "integration",
        "pact_test",
    ],
)

go_library(
    name = "cmd_lib",
    srcs = ["main.go"],
    importpath = "github.com/opicaud/monorepo/shape-app/api/cmd",
    visibility = ["//visibility:private"],
    deps = [
        "//events/eventstore/pkg",
        "//events/pkg",
        "//shape-app/api/proto",
        "//shape-app/domain/pkg",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
    ],
)

go_binary(
    name = "cmd",
    embed = [":cmd_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

go_image(
    name = "cmd_image",
    binary = ":cmd",
    visibility = ["//visibility:public"],
)

filegroup(
    name = "config",
    srcs = [
        "config.yml",
    ],
    visibility = ["//visibility:public"],
)
