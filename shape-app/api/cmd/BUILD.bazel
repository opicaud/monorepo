load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

sh_test(
    name = "cmd_integration_test",
    srcs = ["test.sh"],
    args = [
        "$(location :cmd)",
        "$(location //shape-app/api/proxy)",
        "$(location //shape-app/api/pacts:contract)",
    ],  #keep
    data = [
        ":cmd",
        ":config",  #keep
        "//pact-helper:pact_plugins_zip",
        "//pact-helper:pact_verifier_cli",
        "//shape-app/api/pacts:contract",
        "//shape-app/api/proxy",
    ],
    env = {
        "CONFIG": "$(location :config)",
        "PACT_PLUGIN_DIR": "$(rlocationpath //pact-helper:pact_plugins_zip)",
    },
    tags = [
        "integration",
        "pact_test",
    ],
)

go_library(
    name = "cmd_lib",
    srcs = ["main.go"],
    importpath = "github.com/opicaud/monorepo/shape-app/api/cmd",
    visibility = ["//visibility:private"],
    deps = [
        "//events/eventstore/pkg",
        "//events/pkg",
        "//shape-app/api/proto",
        "//shape-app/domain/pkg",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//status",
    ],
)

go_binary(
    name = "cmd",
    embed = [":cmd_lib"],
    visibility = ["//visibility:private"],
)

go_binary(
    name = "cmd_linux",
    embed = [":cmd_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:private"],
)

filegroup(
    name = "config",
    srcs = [
        "config.yml",
    ],
    visibility = ["//visibility:public"],
)

go_test(
    name = "cmd_test",
    srcs = ["main_test.go"],
    embed = [":cmd_lib"],
    deps = [
        "//shape-app/domain/test",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//health/grpc_health_v1",
    ],
)

load("@rules_helm//helm:defs.bzl", "helm_chart", "helm_lint_test")
load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

pkg_tar(
    name = "tar",
    srcs = ["//events/eventstore/grpc/inmemory/cmd:cmd_linux"],
)

load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball")
load("@rules_oci//examples/push:stamp_tags.bzl", "stamp_tags")

oci_image(
    name = "oci_cmd_image",
    base = "@distroless_go",
    cmd = ["./cmd_linux"],
    tars = [":tar"],
)

oci_tarball(
    name = "tarball",
    image = ":oci_cmd_image",
    repo_tags = ["shapeapp:latest"],
)

stamp_tags(
    name = "stamped",
    remote_tags = [
        """($stamp.STABLE_SHAPE_APP // "0.0.0")""",
    ],
)

oci_push(
    name = "oci_cmd_image.push",
    image = ":oci_cmd_image",
    remote_tags = ":stamped",
    repository = "ghcr.io/opicaud/grpc_shape_app",
)
