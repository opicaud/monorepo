load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "cli_lib",
    srcs = [
        "commands.go",
        "main.go",
    ],
    importpath = "github.com/opicaud/monorepo/shape-app/api/cli",
    visibility = ["//visibility:private"],
    deps = [
        "//shape-app/api/pacts/cli",
        "//shape-app/api/proto",
        "@com_github_urfave_cli_v3//:cli",
    ],
)

go_binary(
    name = "cli",
    embed = [":cli_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "cli_test",
    srcs = ["commands_test.go"],
    embed = [":cli_lib"],
    deps = ["@com_github_stretchr_testify//assert"],
)

## Containerization ##
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")

go_binary(
    name = "cli_linux",
    embed = [":cli_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:private"],
)

pkg_tar(
    name = "tar",
    srcs = [":cli_linux"],
)

oci_image(
    name = "oci_cli_image",
    base = "@distroless_go",
    cmd = ["./cli_linux"],
    tars = [":tar"],
)

write_file(
    name = "tags_tmpl",
    out = "tags.txt.tmpl",
    content = [
        "BUILD_VERSION",
    ],
)

expand_template(
    name = "stamped",
    out = "_stamped.tags.txt",
    stamp_substitutions = {"BUILD_VERSION": "{{STABLE_SHAPE_APP_NEXT_RELEASE_VERSION}}"},
    substitutions = {"BUILD_VERSION": "v0.0.0"},
    template = "tags_tmpl",
)

oci_push(
    name = "oci_cli_image.push",
    image = ":oci_cli_image",
    remote_tags = ":stamped",
    repository = "ghcr.io/opicaud/grpc_shape_app_smoke_tests",
)
