load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@k8s_deployment//:defaults.bzl", "k8s_deployment")
load("@k8s_service//:defaults.bzl", "k8s_service")
load("@k8s_configmap//:defaults.bzl", "k8s_configmap")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

go_library(
    name = "helper_lib",
    srcs = ["main.go"],
    importpath = "github.com/opicaud/monorepo/events/eventstore/grpc/test/helper",
    visibility = ["//visibility:private"],
    deps = [
        "//events/eventstore/pkg",
        "//events/pkg",
        "@com_github_google_uuid//:uuid",
        "@com_github_gorilla_mux//:mux",
    ],
)

container_image(
    name = "base",
    base = "@go_image_base//image",
    directory = "/data",
    docker_run_flags = "-p 8080:8080 --link=eventstore",
    env = {
        "CONFIG": "/data/config.yml",
    },
    files = [":config"],
    legacy_run_behavior = False,
)

go_image(
    name = "helper",
    base = ":base",
    embed = [":helper_lib"],
    goarch = "amd64",
    goos = "linux",
    visibility = ["//visibility:public"],
)

go_test(
    name = "helper_test",
    srcs = ["main_test.go"],
    embed = [":helper_lib"],
    deps = [
        "//events/pkg",
        "@com_github_stretchr_testify//assert",
    ],
)

filegroup(
    name = "config",
    srcs = [
        "config.yml",
    ],
    visibility = ["//visibility:public"],
)

k8s_deployment(
    name = "deployment",
    images = {
        "localhost:5000/eventstore-helper-api:dev": ":helper",
    },
    template = "templates/deployment.yaml",
    visibility = ["//visibility:private"],
)

k8s_service(
    name = "service",
    template = "templates/service.yaml",
    visibility = ["//visibility:private"],
)

k8s_configmap(
    name = "configmap",
    template = "templates/configmap.yaml",
    visibility = ["//visibility:private"],
)

k8s_objects(
    name = "k8s",
    objects = [
        ":configmap",
        ":deployment",
        ":service",
    ],
)