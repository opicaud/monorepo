# Default values for observability.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

tempo-distributed:
  metaMonitoring:
    serviceMonitor:
      enabled: true
      labels:
        release: observability
        interval: 60s
        scrapeTimeout: 60s
        #Argocd workaround to avoid having outOfSync permanently
      relabelings: []
  traces:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true

prometheus-blackbox-exporter:
  config:
    modules:
      http_2xx:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: [ "HTTP/1.1", "HTTP/2.0" ]
          follow_redirects: true
          preferred_ip_protocol: "ip4"
      grpc_2xx:
        prober: grpc
        timeout: 5s
        grpc:
          service: grpc.health.v1.Health
          preferred_ip_protocol: "ipv4"

  serviceMonitor:
    ## If true, a ServiceMonitor CRD is created for a prometheus operator
    ## https://github.com/coreos/prometheus-operator for blackbox-exporter itself
    ##
    selfMonitor:
      enabled: true
      additionalMetricsRelabels: { }
      additionalRelabeling: [ ]
      labels:
        release: observability
      path: /metrics
      scheme: http
      tlsConfig: { }
      interval: 30s
      scrapeTimeout: 30s
      ## Port can be defined by assigning a value for the port key below
      ## port:

    ## If true, a ServiceMonitor CRD is created for a prometheus operator
    ## https://github.com/coreos/prometheus-operator for each target
    ##
    enabled: true

    # Default values that will be used for all ServiceMonitors created by `targets`
    defaults:
      labels:
        release: observability
      additionalMetricsRelabels: { }
      additionalRelabeling: [ ]
      interval: 60s
      scrapeTimeout: 60s
      module: http_2xx
    ## scheme: HTTP scheme to use for scraping. Can be used with `tlsConfig` for example if using istio mTLS.
    scheme: http
    ## path: HTTP path. Needs to be adjusted, if web.route-prefix is set
    path: "/probe"
    ## tlsConfig: TLS configuration to use when scraping the endpoint. For example if using istio mTLS.
    ## Of type: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#tlsconfig
    tlsConfig: { }
    bearerTokenFile:

    targets:
      - name: shape-app-grpc
        url: http://shape-app-grpc.default.svc.cluster.local
        module: grpc_2xx
      - name: eventstore-grpc
        url: http://eventstore-grpc.default.svc.cluster.local
        module: grpc_2xx
  ## Custom PrometheusRules to be defined
  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
  prometheusRule:
    enabled: false
    additionalLabels: { }
    namespace: ""
    rules: [ ]

kube-prometheus-stack:
  defaultRules:
    create: true
  alertmanager:
    enabled: false
  kubeApiServer:
    enabled: false
  kubelet:
    enabled: false
  kubeControllerManager:
    enabled: false
  coreDns:
    enabled: false
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: false
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  networkPolicy:
    enabled: false
  kubeletService:
    enabled: false
  prometheus:
    enabled: true
  thanosRuler:
    enabled: false
  prometheusOperator:
    ## Admission webhook support for PrometheusRules resources added in Prometheus Operator 0.30 can be enabled to prevent incorrectly formatted
    ## rules from making their way into prometheus and potentially preventing the container from starting
    admissionWebhooks:
      enabled: false

  grafana:
    enabled: true
    adminUser: admin
    adminPassword: admin
    serviceMonitor:
      labels:
        release: observability
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Tempo
            type: tempo
            url: http://observability-tempo-query-frontend.default.svc.cluster.local:3100
    defaultDashboardsEnabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'custom'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/custom
    dashboards:
      default:
        blackbox-exporter:
          # Ref: https://grafana.com/dashboards/5345
          gnetId: 14928
          revision: 3
          datasource: Prometheus
    dashboardsConfigMaps:
      custom: observability

